grf {
    grfid:                  "BY\01\01";
    name:                   string(STR_GRF_NAME);
    desc:                   string(STR_GRF_DESCRIPTION);
    url:                    string(STR_GRF_URL);
    version:                0;
    min_compatible_version: 0;
}

// x and y are the top left corner of the first signal (NW-SW)
// the top left corners of all sprites should be on (16x + 16n, y)
// [x, y, sizeX, sizeY, offX, offY]

template semaphore_1_red(x, y) {
    [x+  0, y,  8, 24, -3, -21] // SW
    [x+ 16, y,  8, 25, -5, -22] // NE
    [x+ 32, y,  8, 24, -5, -21] // NW
    [x+ 48, y,  8, 25, -3, -22] // SE
    [x+ 64, y,  3, 24, -1, -21] // W
    [x+ 80, y,  3, 24, -1, -25] // E
    [x+ 96, y, 10, 24, -3, -21] // N
    [x+112, y, 10, 24, -1, -25] // S
}
template semaphore_1_green(x, y) {
    [x+ 16, y, 4, 28, -2, -25] // SW
    [x+ 32, y, 4, 28, -2, -25] // NE
    [x+ 48, y, 4, 28, -2, -25] // NW
    [x+ 64, y, 4, 28, -2, -25] // SE
    [x+ 80, y, 3, 28, -2, -21] // W
    [x+ 96, y, 3, 28, -2, -25] // E
    [x+112, y, 4, 28, -3, -25] // N
    [x+128, y, 4, 28, -7, -21] // S
}

// spriteset name, source image { sprites... }
spriteset(semaphore_1_red, "gfx/semaphore-1arm.png") {
    semaphore_1_red(0, 0)
}
spriteset(semaphore_1_green, "gfx/semaphore-1arm.png") {
    semaphore_1_green(0, 0)
}

if (getbits(extra_callback_info2, 8, 8) == 1 // is semaphore
&& getbits(extra_callback_info2, 0, 8) == 0 // is block signal
) {
    switch(FEAT_SIGNALS, SELF, semaphore, getbits(extra_callback_info2, 0, 8) // signal state
    ) {
        0: signals_block_red;
        1: signals_block_green;
    }
}