grf {
    grfid:                  "BY\01\01";
    name:                   string(STR_GRF_NAME);
    desc:                   string(STR_GRF_DESCRIPTION);
    url:                    string(STR_GRF_URL);
    version:                8;
    min_compatible_version: 0;

    param {
        param_replace_default_graphics {
            type: int;
            name: string(STR_PARAM_REPLACE_DEFAULT_NAME);
            desc: string(STR_PARAM_REPLACE_DEFAULT_DESC);
            def_value: 0;
            min_value: 0;
            max_value: 2;
            names: {
                0: string(STR_PARAM_NO_REPLACEMENT);
                1: string(STR_PARAM_REPLACE_DEFAULT_ONLY);
                2: string(STR_PARAM_REPLACE_DEFAULT_WITH_SELECTOR);
            };
        }
    }
    param {
        param_use_double_headed_block {
            type: bool;
            name: string(STR_PARAM_USE_DOUBLE_BLOCK_NAME);
            desc: string(STR_PARAM_USE_DOUBLE_BLOCK_DESC);
            def_value: 0;
        }
    }
    param {
        param_signal_gui_row_1 {
            type: int;
            name: string(STR_PARAM_SIGNAL_ROW_1_NAME);
            desc: string(STR_PARAM_SIGNAL_ROW_1_DESC);
            def_value: 0;
            min_value: 0;
            max_value: 3;
            names: {
                0: string(STR_PARAM_VALUE_SEMAPHORE);
                1: string(STR_PARAM_VALUE_SEARCHLIGHT);
                2: string(STR_PARAM_VALUE_COLORLIGHT);
                3: string(STR_PARAM_VALUE_BOPOSITION);
            };
        }
    }
    param {
        param_signal_gui_row_2 {
            type: int;
            name: string(STR_PARAM_SIGNAL_ROW_2_NAME);
            desc: string(STR_PARAM_SIGNAL_ROW_2_DESC);
            def_value: 1;
            min_value: 0;
            max_value: 3;
            names: {
                0: string(STR_PARAM_VALUE_SEMAPHORE);
                1: string(STR_PARAM_VALUE_SEARCHLIGHT);
                2: string(STR_PARAM_VALUE_COLORLIGHT);
                3: string(STR_PARAM_VALUE_BOPOSITION);
            };
        }
    }
}

// if (grf_future_status("\4E\4D\07\05")) { error(FATAL, string(STR_ERROR_INCOMPATIBLE_SET, "North American Track Set")); }
// if (grf_future_status("\4E\4D\09\20")) { error(FATAL, string(STR_ERROR_INCOMPATIBLE_SET, "North American Track Set 2")); }

if (!extended_feature_test("action3_signals_custom_signal_sprites")) {
    error(FATAL, string(STR_ERROR_UNSUPPORTED_VERSION));
}

/*
Each signal is 16x32px, with 1 pixel in between on all sides.
=> Each signal has their top left corner on (17i, 33j), where i >= 0 and j >= 0.
Different orientations of the same aspect are located on the same row, 17*3 = 51px on the x-axis.
*/
template cell(x, y, n, k) { [17*x+17*k*n, 33*y, 16, 32, -8, -32] }
template aspect_cell(x, y, n) { cell(x, y, n, 3) }

// x and y are the 0-indexed col/row number of the signal
template aspect(signalRow, aspectColumn) {
    aspect_cell(aspectColumn, signalRow, 0)
    aspect_cell(aspectColumn, signalRow, 1)
    aspect_cell(aspectColumn, signalRow, 2)
    aspect_cell(aspectColumn, signalRow, 3)
    aspect_cell(aspectColumn, signalRow, 4)
    aspect_cell(aspectColumn, signalRow, 5)
    aspect_cell(aspectColumn, signalRow, 6)
    aspect_cell(aspectColumn, signalRow, 7)
}
template consecutive(signalRow, aspectColumn) {
    cell(aspectColumn, signalRow, 0, 1)
    cell(aspectColumn, signalRow, 1, 1)
    cell(aspectColumn, signalRow, 2, 1)
    cell(aspectColumn, signalRow, 3, 1)
    cell(aspectColumn, signalRow, 4, 1)
    cell(aspectColumn, signalRow, 5, 1)
    cell(aspectColumn, signalRow, 6, 1)
    cell(aspectColumn, signalRow, 7, 1)
}

//!SPRITES!//

spriteset(signal_noentry, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "src/img/oneway/oneway.png"){consecutive(0,0)}

switch(FEAT_SIGNALS, SELF, SIGNAL_ASPECT, getbits(extra_callback_info2, 0, 8)){return;}
switch(FEAT_SIGNALS, SELF, SIGNAL_VARIANT, getbits(extra_callback_info2, 8, 8)){return;}
switch(FEAT_SIGNALS, SELF, SIGNAL_TYPE, getbits(extra_callback_info2, 16, 8)){return;}

switch(FEAT_SIGNALS, SELF, sw_single_semaphore, SIGNAL_ASPECT()){
    01: signal_single_semaphore_CLEAR;
    03: signal_single_semaphore_CLEAR;
    02: signal_single_semaphore_APPROACH;
    00: signal_single_semaphore_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_block_semaphore, SIGNAL_ASPECT()){
    01: signal_double_block_semaphore_CLEAR;
    03: signal_double_block_semaphore_APPROACH_MEDIUM;
    02: signal_double_block_semaphore_APPROACH;
    00: signal_double_block_semaphore_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_path_semaphore, SIGNAL_ASPECT()){
    01: signal_double_path_semaphore_CLEAR;
    03: signal_double_path_semaphore_APPROACH_MEDIUM;
    02: signal_double_path_semaphore_APPROACH;
    00: signal_double_path_semaphore_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_onewaypath_semaphore, SIGNAL_ASPECT()){
    01: signal_double_onewaypath_semaphore_CLEAR;
    03: signal_double_onewaypath_semaphore_APPROACH_MEDIUM;
    02: signal_double_onewaypath_semaphore_APPROACH;
    00: signal_double_onewaypath_semaphore_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_single_searchlight, SIGNAL_ASPECT()){
    01: signal_single_searchlight_CLEAR;
    03: signal_single_searchlight_CLEAR;
    02: signal_single_searchlight_APPROACH;
    00: signal_single_searchlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_block_searchlight, SIGNAL_ASPECT()){
    01: signal_double_block_searchlight_CLEAR;
    03: signal_double_block_searchlight_APPROACH_MEDIUM;
    02: signal_double_block_searchlight_APPROACH;
    00: signal_double_block_searchlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_path_searchlight, SIGNAL_ASPECT()){
    01: signal_double_path_searchlight_CLEAR;
    03: signal_double_path_searchlight_APPROACH_MEDIUM;
    02: signal_double_path_searchlight_APPROACH;
    00: signal_double_path_searchlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_onewaypath_searchlight, SIGNAL_ASPECT()){
    01: signal_double_onewaypath_searchlight_CLEAR;
    03: signal_double_onewaypath_searchlight_APPROACH_MEDIUM;
    02: signal_double_onewaypath_searchlight_APPROACH;
    00: signal_double_onewaypath_searchlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_single_colorlight, SIGNAL_ASPECT()){
    01: signal_single_colorlight_CLEAR;
    03: signal_single_colorlight_CLEAR;
    02: signal_single_colorlight_APPROACH;
    00: signal_single_colorlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_block_colorlight, SIGNAL_ASPECT()){
    01: signal_double_block_colorlight_CLEAR;
    03: signal_double_block_colorlight_APPROACH_MEDIUM;
    02: signal_double_block_colorlight_APPROACH;
    00: signal_double_block_colorlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_path_colorlight, SIGNAL_ASPECT()){
    01: signal_double_path_colorlight_CLEAR;
    03: signal_double_path_colorlight_APPROACH_MEDIUM;
    02: signal_double_path_colorlight_APPROACH;
    00: signal_double_path_colorlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_onewaypath_colorlight, SIGNAL_ASPECT()){
    01: signal_double_onewaypath_colorlight_CLEAR;
    03: signal_double_onewaypath_colorlight_APPROACH_MEDIUM;
    02: signal_double_onewaypath_colorlight_APPROACH;
    00: signal_double_onewaypath_colorlight_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_single_boposition, SIGNAL_ASPECT()){
    01: signal_single_boposition_CLEAR;
    03: signal_single_boposition_CLEAR;
    02: signal_single_boposition_APPROACH;
    00: signal_single_boposition_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_block_boposition, SIGNAL_ASPECT()){
    01: signal_double_block_boposition_CLEAR;
    03: signal_double_block_boposition_APPROACH_MEDIUM;
    02: signal_double_block_boposition_APPROACH;
    00: signal_double_block_boposition_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_path_boposition, SIGNAL_ASPECT()){
    01: signal_double_path_boposition_CLEAR;
    03: signal_double_path_boposition_APPROACH_MEDIUM;
    02: signal_double_path_boposition_APPROACH;
    00: signal_double_path_boposition_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_double_onewaypath_boposition, SIGNAL_ASPECT()){
    01: signal_double_onewaypath_boposition_CLEAR;
    03: signal_double_onewaypath_boposition_APPROACH_MEDIUM;
    02: signal_double_onewaypath_boposition_APPROACH;
    00: signal_double_onewaypath_boposition_STOP;
}

switch(FEAT_SIGNALS, SELF, sw_semaphore, SIGNAL_TYPE() << 4 | param_use_double_headed_block){
    0x00: sw_single_semaphore;
    0x01: sw_double_block_semaphore;
    0x40..0x41: sw_double_path_semaphore;
    0x50..0x51: sw_double_onewaypath_semaphore;
    0x70..0x71: signal_noentry;
}

switch(FEAT_SIGNALS, SELF, sw_searchlight, SIGNAL_TYPE() << 4 | param_use_double_headed_block){
    0x00: sw_single_searchlight;
    0x01: sw_double_block_searchlight;
    0x40..0x41: sw_double_path_searchlight;
    0x50..0x51: sw_double_onewaypath_searchlight;
    0x70..0x71: signal_noentry;
}

switch(FEAT_SIGNALS, SELF, sw_colorlight, SIGNAL_TYPE() << 4 | param_use_double_headed_block){
    0x00: sw_single_colorlight;
    0x01: sw_double_block_colorlight;
    0x40..0x41: sw_double_path_colorlight;
    0x50..0x51: sw_double_onewaypath_colorlight;
    0x70..0x71: signal_noentry;
}

switch(FEAT_SIGNALS, SELF, sw_boposition, SIGNAL_TYPE() << 4 | param_use_double_headed_block){
    0x00: sw_single_boposition;
    0x01: sw_double_block_boposition;
    0x40..0x41: sw_double_path_boposition;
    0x50..0x51: sw_double_onewaypath_boposition;
    0x70..0x71: signal_noentry;
}

switch(FEAT_SIGNALS, SELF, sw_signal_styles, signal_style) {
    1: sw_semaphore;
    2: sw_searchlight;
    3: sw_colorlight;
    4: sw_boposition;
}

item (FEAT_SIGNALS, custom_signals, 0) {
    property {
        extra_aspects: 2;
    }
}

switch (FEAT_SIGNALS, SELF, sw_replaced_signals_semaphore, param_signal_gui_row_1) {
    0: sw_semaphore;
    1: sw_searchlight;
    2: sw_colorlight;
    3: sw_boposition;
}
switch (FEAT_SIGNALS, SELF, sw_replaced_signals_electric, param_signal_gui_row_2) {
    0: sw_semaphore;
    1: sw_searchlight;
    2: sw_colorlight;
    3: sw_boposition;
}
switch (FEAT_SIGNALS, SELF, sw_replaced_signals, SIGNAL_VARIANT()) {
    0: sw_replaced_signals_electric;
    1: sw_replaced_signals_semaphore;
}
switch (FEAT_SIGNALS, SELF, sw_replaced_with_signal_styles, signal_style << 4 | SIGNAL_VARIANT()) {
    0: sw_replaced_signals_electric;
    1: sw_replaced_signals_semaphore;
    0x10..0x11: sw_semaphore;
    0x20..0x21: sw_searchlight;
    0x30..0x31: sw_colorlight;
    0x40..0x41: sw_boposition;
}


if (param_replace_default_graphics == 0) {
    // do not replace graphics, add styles only
    item (FEAT_SIGNALS, custom_signals, 0) {
        property {
            define_style:       1; // semaphore
            style_name:         string(STR_SIG_SEMAPHORE);
            enable_no_entry_signals: 1;
            style_semaphore_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);

            define_style:       2; // searchlight
            style_name:         string(STR_SIG_SEARCHLIGHT);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
            
            define_style:       3; // colorlight
            style_name:         string(STR_SIG_COLORLIGHT);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
            
            define_style:       4; // b&o color position
            style_name:         string(STR_SIG_BOPOSITION);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
        }
        graphics {
            sw_signal_styles;
        }
    }
} else if (param_replace_default_graphics == 1) {
    // replace default, no selector
    item (FEAT_SIGNALS, custom_signals, 0) {
        property {
            enable_no_entry_signals: 1;
        }
        graphics {
            sw_replaced_signals;
        }
    }
} else {
    // replace default and add styles
    item (FEAT_SIGNALS, custom_signals, 0) {
        property {
            define_style:       1; // semaphore
            style_name:         string(STR_SIG_SEMAPHORE);
            enable_no_entry_signals: 1;
            style_semaphore_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);

            define_style:       2; // searchlight
            style_name:         string(STR_SIG_SEARCHLIGHT);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
            
            define_style:       3; // colorlight
            style_name:         string(STR_SIG_COLORLIGHT);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
            
            define_style:       4; // b&o color position
            style_name:         string(STR_SIG_BOPOSITION);
            enable_no_entry_signals: 1;
            style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY, SIGNAL_TYPE_NO_ENTRY);
        }
        graphics {
            sw_replaced_with_signal_styles;
        }
    }
}
